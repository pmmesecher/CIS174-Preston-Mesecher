// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicGamesMesecher.Models;

namespace OlympicGamesMesecher.Migrations
{
    [DbContext(typeof(CountryContext))]
    [Migration("20230308000325_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OlympicGamesMesecher.Models.Category", b =>
                {
                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = "Curling/Indoor",
                            Name = "Curling/Indoor"
                        },
                        new
                        {
                            CategoryID = "Bobsleigh/Outdoor",
                            Name = "Bobsleigh/Outdoor"
                        },
                        new
                        {
                            CategoryID = "Diving/Indoor",
                            Name = "Diving/Indoor"
                        },
                        new
                        {
                            CategoryID = "RoadCycling/Outdoor",
                            Name = "RoadCycling/Outdoor"
                        },
                        new
                        {
                            CategoryID = "Archery/Indoor",
                            Name = "Archery/Indoor"
                        },
                        new
                        {
                            CategoryID = "Canoe Sprint/Outdoor",
                            Name = "Canoe Sprint/Outdoor"
                        },
                        new
                        {
                            CategoryID = "Breakdancing/Indoor",
                            Name = "Breakdancing/Indoor"
                        },
                        new
                        {
                            CategoryID = "Skateboarding/Outdoor",
                            Name = "Skateboarding/Outdoor"
                        });
                });

            modelBuilder.Entity("OlympicGamesMesecher.Models.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LogoImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("GameID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "Can",
                            CategoryID = "Curling/Indoor",
                            GameID = "Winter Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_ca-flag.gif",
                            Name = "Canada"
                        },
                        new
                        {
                            CountryID = "Swe",
                            CategoryID = "Curling/Indoor",
                            GameID = "Winter Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_sw-flag.gif",
                            Name = "Sweden"
                        },
                        new
                        {
                            CountryID = "Gre",
                            CategoryID = "Curling/Indoor",
                            GameID = "Winter Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_uk-flag.gif",
                            Name = "Great Britain"
                        },
                        new
                        {
                            CountryID = "Jam",
                            CategoryID = "Bobsleigh/Outdoor",
                            GameID = "Winter Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_jm-flag.gif",
                            Name = "Jamaica"
                        },
                        new
                        {
                            CountryID = "Ita",
                            CategoryID = "Bobsleigh/Outdoor",
                            GameID = "Winter Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_it-flag.gif",
                            Name = "Italy"
                        },
                        new
                        {
                            CountryID = "Jap",
                            CategoryID = "Bobsleigh/Outdoor",
                            GameID = "Winter Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_ja-flag.gif",
                            Name = "Japan"
                        },
                        new
                        {
                            CountryID = "Ger",
                            CategoryID = "Diving/Indoor",
                            GameID = "Summer Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_gm-flag.gif",
                            Name = "Germany"
                        },
                        new
                        {
                            CountryID = "Chi",
                            CategoryID = "Diving/Indoor",
                            GameID = "Summer Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_ch-flag.gif",
                            Name = "China"
                        },
                        new
                        {
                            CountryID = "Mex",
                            CategoryID = "Diving/Indoor",
                            GameID = "Summer Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_mx-flag.gif",
                            Name = "Mexico"
                        },
                        new
                        {
                            CountryID = "Bra",
                            CategoryID = "RoadCycling/Outdoor",
                            GameID = "Summer Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_br-flag.gif",
                            Name = "Brazil"
                        },
                        new
                        {
                            CountryID = "Net",
                            CategoryID = "RoadCycling/Outdoor",
                            GameID = "Summer Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_nl-flag.gif",
                            Name = "Netherlands"
                        },
                        new
                        {
                            CountryID = "USA",
                            CategoryID = "RoadCycling/Outdoor",
                            GameID = "Summer Olympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_us-flag.gif",
                            Name = "USA"
                        },
                        new
                        {
                            CountryID = "Tha",
                            CategoryID = "Archery/Indoor",
                            GameID = "Paralympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_th-flag.gif",
                            Name = "Thailand"
                        },
                        new
                        {
                            CountryID = "Uru",
                            CategoryID = "Archery/Indoor",
                            GameID = "Paralympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_uy-flag.gif",
                            Name = "Uruguay"
                        },
                        new
                        {
                            CountryID = "Ukr",
                            CategoryID = "Archery/Indoor",
                            GameID = "Paralympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_up-flag.gif",
                            Name = "Ukraine"
                        },
                        new
                        {
                            CountryID = "Aus",
                            CategoryID = "Canoe Sprint/Outdoor",
                            GameID = "Paralympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_au-flag.gif",
                            Name = "Austria"
                        },
                        new
                        {
                            CountryID = "Pak",
                            CategoryID = "Canoe Sprint/Outdoor",
                            GameID = "Paralympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_pk-flag.gif",
                            Name = "Pakistan"
                        },
                        new
                        {
                            CountryID = "Zim",
                            CategoryID = "Canoe Sprint/Outdoor",
                            GameID = "Paralympics",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_zi-flag.gif",
                            Name = "Zimbabwe"
                        },
                        new
                        {
                            CountryID = "Fra",
                            CategoryID = "Breakdancing/Indoor",
                            GameID = "Youth Olympic Games",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_fr-flag.gif",
                            Name = "France"
                        },
                        new
                        {
                            CountryID = "Cyp",
                            CategoryID = "Breakdancing/Indoor",
                            GameID = "Youth Olympic Games",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_cy-flag.gif",
                            Name = "Cyprus"
                        },
                        new
                        {
                            CountryID = "Rus",
                            CategoryID = "Breakdancing/Indoor",
                            GameID = "Youth Olympic Games",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_rs-flag.gif",
                            Name = "Russia"
                        },
                        new
                        {
                            CountryID = "Fin",
                            CategoryID = "Skateboarding/Outdoor",
                            GameID = "Youth Olympic Games",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_fi-flag.gif",
                            Name = "Finland"
                        },
                        new
                        {
                            CountryID = "Slo",
                            CategoryID = "Skateboarding/Outdoor",
                            GameID = "Youth Olympic Games",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_lo-flag.gif",
                            Name = "Slovakia"
                        },
                        new
                        {
                            CountryID = "Por",
                            CategoryID = "Skateboarding/Outdoor",
                            GameID = "Youth Olympic Games",
                            LogoImage = "https://www.worldometers.info/img/flags/small/tn_po-flag.gif",
                            Name = "Portugal"
                        });
                });

            modelBuilder.Entity("OlympicGamesMesecher.Models.Game", b =>
                {
                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = "Winter Olympics",
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            GameID = "Summer Olympics",
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            GameID = "Paralympics",
                            Name = "Paralympics"
                        },
                        new
                        {
                            GameID = "Youth Olympic Games",
                            Name = "Youth Olympic Games"
                        });
                });

            modelBuilder.Entity("OlympicGamesMesecher.Models.Country", b =>
                {
                    b.HasOne("OlympicGamesMesecher.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.HasOne("OlympicGamesMesecher.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID");
                });
#pragma warning restore 612, 618
        }
    }
}
